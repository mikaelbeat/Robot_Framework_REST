<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.4 (Python 3.7.0 on win32)" generated="20180904 23:43:23.911">
<suite id="s1" name="Put" source="C:\Users\petri.ryynanen\git\Robot_Framework_REST\Robot_Framework_REST\tests\put.robot">
<test id="s1-t1" name="Put test">
<kw name="Test run">
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${payload_location}${payload}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20180904 23:43:24.095" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\petri.ryynanen\git\Robot_Framework_REST\Robot_Framework_REST\Payloads\Update_user.Json"&gt;C:\Users\petri.ryynanen\git\Robot_Framework_REST\Robot_Framework_REST\Payloads\Update_user.Json&lt;/a&gt;'.</msg>
<msg timestamp="20180904 23:43:24.099" level="INFO">${payload} = {"id":"221","createdAt":"2018-09-01T16:57:25.803Z"}</msg>
<status status="PASS" starttime="20180904 23:43:24.095" endtime="20180904 23:43:24.099"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>putSession</arg>
<arg>https://reqres.in</arg>
<arg>verify=true</arg>
</arguments>
<msg timestamp="20180904 23:43:24.099" level="INFO">Creating Session using : alias=putSession, url=https://reqres.in, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=true,                     debug=0 </msg>
<status status="PASS" starttime="20180904 23:43:24.099" endtime="20180904 23:43:24.099"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>putSession</arg>
<arg>/api/users/2</arg>
<arg>${payload}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180904 23:43:24.599" level="INFO">Post Request using : alias=putSession, uri=/api/users/2, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20180904 23:43:24.599" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20180904 23:43:24.099" endtime="20180904 23:43:24.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20180904 23:43:24.603" level="INFO">201</msg>
<status status="PASS" starttime="20180904 23:43:24.599" endtime="20180904 23:43:24.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
</arguments>
<msg timestamp="20180904 23:43:24.603" level="INFO">{"id":"109","createdAt":"2018-09-04T20:45:29.231Z"}</msg>
<status status="PASS" starttime="20180904 23:43:24.603" endtime="20180904 23:43:24.603"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20180904 23:43:24.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20180904 23:43:24.603" endtime="20180904 23:43:24.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>createdAt</arg>
</arguments>
<status status="PASS" starttime="20180904 23:43:24.607" endtime="20180904 23:43:24.607"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.text}</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${pretty_printed_response}</var>
</assign>
<msg timestamp="20180904 23:43:24.607" level="INFO">To JSON using : content={"id":"109","createdAt":"2018-09-04T20:45:29.231Z"} </msg>
<msg timestamp="20180904 23:43:24.607" level="INFO">To JSON using : pretty_print=true </msg>
<msg timestamp="20180904 23:43:24.607" level="INFO">${pretty_printed_response} = {
    "createdAt": "2018-09-04T20:45:29.231Z",
    "id": "109"
}</msg>
<status status="PASS" starttime="20180904 23:43:24.607" endtime="20180904 23:43:24.607"></status>
</kw>
<kw name="Create Binary File" library="OperatingSystem">
<doc>Creates a binary file with the given content.</doc>
<arguments>
<arg>${save_response_location}${saved_response}</arg>
<arg>${pretty_printed_response}</arg>
</arguments>
<msg timestamp="20180904 23:43:24.619" level="INFO" html="yes">Created binary file '&lt;a href="file://C:\Users\petri.ryynanen\git\Robot_Framework_REST\Robot_Framework_REST\Responses\Put_response.json"&gt;C:\Users\petri.ryynanen\git\Robot_Framework_REST\Robot_Framework_REST\Responses\Put_response.json&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20180904 23:43:24.611" endtime="20180904 23:43:24.619"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${save_response_location}${saved_response}</arg>
</arguments>
<assign>
<var>${response_to_be_edited}</var>
</assign>
<msg timestamp="20180904 23:43:24.619" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\petri.ryynanen\git\Robot_Framework_REST\Robot_Framework_REST\Responses\Put_response.json"&gt;C:\Users\petri.ryynanen\git\Robot_Framework_REST\Robot_Framework_REST\Responses\Put_response.json&lt;/a&gt;'.</msg>
<msg timestamp="20180904 23:43:24.619" level="INFO">${response_to_be_edited} = {
    "createdAt": "2018-09-04T20:45:29.231Z",
    "id": "109"
}</msg>
<status status="PASS" starttime="20180904 23:43:24.619" endtime="20180904 23:43:24.619"></status>
</kw>
<kw name="Replace String Using Regexp" library="String">
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${response_to_be_edited}</arg>
<arg>2018....................</arg>
<arg>edited_date</arg>
</arguments>
<assign>
<var>${edited_response}</var>
</assign>
<msg timestamp="20180904 23:43:24.623" level="INFO">${edited_response} = {
    "createdAt": "edited_date",
    "id": "109"
}</msg>
<status status="PASS" starttime="20180904 23:43:24.619" endtime="20180904 23:43:24.623"></status>
</kw>
<kw name="Replace String Using Regexp" library="String">
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${edited_response}</arg>
<arg>\\d\\d{1,3}</arg>
<arg>edited_id</arg>
</arguments>
<assign>
<var>${final_response}</var>
</assign>
<msg timestamp="20180904 23:43:24.623" level="INFO">${final_response} = {
    "createdAt": "edited_date",
    "id": "edited_id"
}</msg>
<status status="PASS" starttime="20180904 23:43:24.623" endtime="20180904 23:43:24.623"></status>
</kw>
<kw name="Create Binary File" library="OperatingSystem">
<doc>Creates a binary file with the given content.</doc>
<arguments>
<arg>${save_response_location}${saved_response}</arg>
<arg>${final_response}</arg>
</arguments>
<msg timestamp="20180904 23:43:24.627" level="INFO" html="yes">Created binary file '&lt;a href="file://C:\Users\petri.ryynanen\git\Robot_Framework_REST\Robot_Framework_REST\Responses\Put_response.json"&gt;C:\Users\petri.ryynanen\git\Robot_Framework_REST\Robot_Framework_REST\Responses\Put_response.json&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20180904 23:43:24.623" endtime="20180904 23:43:24.627"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${save_response_location}${saved_response}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180904 23:43:24.627" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\petri.ryynanen\git\Robot_Framework_REST\Robot_Framework_REST\Responses\Put_response.json"&gt;C:\Users\petri.ryynanen\git\Robot_Framework_REST\Robot_Framework_REST\Responses\Put_response.json&lt;/a&gt;'.</msg>
<msg timestamp="20180904 23:43:24.631" level="INFO">${response} = {
    "createdAt": "edited_date",
    "id": "edited_id"
}</msg>
<status status="PASS" starttime="20180904 23:43:24.627" endtime="20180904 23:43:24.631"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${expected_location}${expected_response}</arg>
</arguments>
<assign>
<var>${expected}</var>
</assign>
<msg timestamp="20180904 23:43:24.631" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\petri.ryynanen\git\Robot_Framework_REST\Robot_Framework_REST\Expected\Put_expected.json"&gt;C:\Users\petri.ryynanen\git\Robot_Framework_REST\Robot_Framework_REST\Expected\Put_expected.json&lt;/a&gt;'.</msg>
<msg timestamp="20180904 23:43:24.635" level="INFO">${expected} = {
    "createdAt": "edited_date",
    "id": "edited_id"
}</msg>
<status status="PASS" starttime="20180904 23:43:24.631" endtime="20180904 23:43:24.635"></status>
</kw>
<kw name="Diff Files" library="DiffLibrary">
<doc>Diff two text files</doc>
<arguments>
<arg>${response}</arg>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20180904 23:43:24.639" level="INFO">file1: {
    "createdAt": "edited_date",
    "id": "edited_id"
}</msg>
<msg timestamp="20180904 23:43:24.639" level="INFO">file2: {
    "createdAt": "edited_date",
    "id": "edited_id"
}</msg>
<msg timestamp="20180904 23:43:24.643" level="FAIL">{
    "createdAt": "edited_date",
    "id": "edited_id"
} doesn't exist</msg>
<status status="FAIL" starttime="20180904 23:43:24.635" endtime="20180904 23:43:24.643"></status>
</kw>
<status status="FAIL" starttime="20180904 23:43:24.095" endtime="20180904 23:43:24.643"></status>
</kw>
<status status="FAIL" starttime="20180904 23:43:24.095" endtime="20180904 23:43:24.651" critical="yes">{
    "createdAt": "edited_date",
    "id": "edited_id"
} doesn't exist</status>
</test>
<status status="FAIL" starttime="20180904 23:43:23.915" endtime="20180904 23:43:24.651"></status>
</suite>
<statistics>
<total>
<stat pass="0" fail="1">Critical Tests</stat>
<stat pass="0" fail="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" id="s1" name="Put">Put</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
